[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bestfriend"
version = "0.1.0"
description = "Best Friend AI Companion - A Flask web application with AI chat capabilities"
authors = [{name = "Charles Hartmann"}]
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "Flask",
    "Flask-SQLAlchemy",
    "Flask-Login",
    "Flask-Limiter",
    "Flask-WTF",
    "Flask-Migrate",
    "gunicorn",
    "psycopg2-binary",
    "redis",
    "SQLAlchemy",
    "alembic",
    "pgvector",
    "faster-whisper",
    "requests",
    "cryptography",
    "bcrypt",
    "python-dotenv",
    "WTForms",
    "python-multipart",
    "rq",
    "Pillow",
]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pytest-flask",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
